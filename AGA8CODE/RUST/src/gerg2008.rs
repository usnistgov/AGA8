const RGERG: f64 = 8.314_472;
const NC_GERG: usize = 21;
const MAXFLDS: usize = 21;
const MAXMDL: usize = 10;
const MAXTRMM: usize = 12;
const MAXTRMP: usize = 24;
const EPSILON: f64 = 1.0e-15;

// Molar masses [g/mol]
const MMI_GERG: [f64; MAXFLDS+1] = [0.0,
    16.042_46,    // Methane
    28.013_4,     // Nitrogen
    44.009_5,     // Carbon dioxide
    30.069_04,    // Ethane
    44.095_62,    // Propane
    58.122_2,     // Isobutane
    58.122_2,     // n-Butane
    72.148_78,    // Isopentane
    72.148_78,    // n-Pentane
    86.175_36,   // Hexane
    100.201_94,  // Heptane
    114.228_52,  // Octane
    128.255_1,   // Nonane
    142.281_68,  // Decane
    2.015_88,    // Hydrogen
    31.998_8,    // Oxygen
    28.010_1,    // Carbon monoxide
    18.015_28,   // Water
    34.080_88,   // Hydrogen sulfide
    4.002_602,   // Helium
    39.948,     // Argon
];

const KPOL: [usize; MAXFLDS+1] = [0,
    6, 6, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 6, 6, 7, 6, 4, 6,
];

const KEXP: [usize; MAXFLDS+1] = [0,
    18, 18, 18, 18, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 9, 6, 6, 9, 6, 8, 6,
];

const KPOLIJ: [usize; MAXMDL+1] = [0,
    2, 5, 2, 3, 2, 3, 4, 6, 6, 10,
];

const KEXPIJ: [usize; MAXMDL+1] = [0,
    10, 4, 7, 3, 4, 3, 0, 6, 6, 0,
];

// Critical densities [mol/l]
const DC: [f64; MAXFLDS+1] = [0.0,
    10.139_342_719,
    11.183_9,
    10.624_978_698,
    6.870_854_54,
    5.000_043_088,
    3.860_142_94,
    3.920_016_792,
    3.271,
    3.215_577_588,
    2.705_877_875,
    2.315_324_434,
    2.056_404_127,
    1.81,
    1.64,
    14.94,
    13.63,
    10.85,
    17.873_716_09,
    10.19,
    17.399,
    13.407_429_659,
];

// Critical temperatures [K]
const TC: [f64; MAXFLDS+1] = [0.0,
    190.564,
    126.192,
    304.1282,
    305.322,
    369.825,
    407.817,
    425.125,
    460.35,
    469.7,
    507.82,
    540.13,
    569.32,
    594.55,
    617.7,
    33.19,
    154.595,
    132.86,
    647.096,
    373.1,
    5.1953,
    150.687,
];

const NOIK: [[f64; MAXTRMP+1]; MAXFLDS+1] = [
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.5733570423916200, -1.676068752373000, 0.2340529183491600, -0.2194737634344100, 0.01636920140412800, 0.01500440638928000, 0.09899048949291800, 0.5838277092905499, -0.7478686756039000, 0.3003330285797400, 0.2098554380656800, -0.01859015113306100, -0.1578255833904900, 0.1271673522079100, -0.03201974389434600, -0.06804972936453600, 0.02429141285373600, 0.005144045163944400, -0.01908494973353200, 0.005522967724129100, -0.004419739297608500, 0.04006141670842900, -0.03375208590757500, -0.002512765821335700, ],
    [0.000000000000000, 0.5988971180120100, -1.694155748073100, 0.2457973619171800, -0.2372245675517500, 0.01795491871514100, 0.01459287572021500, 0.1000806593620600, 0.7315711538553200, -0.8837227233636600, 0.3188766024670800, 0.2076649172879900, -0.01937931545415800, -0.1693664155498300, 0.1354684604170100, -0.03306671209530700, -0.06069081701855700, 0.01279754829287100, 0.005874366410729900, -0.01845195197196900, 0.004722662204247200, -0.005202407968059900, 0.04356350595663500, -0.03625169075093900, -0.002897402686654300, ],
    [0.000000000000000, 0.5264656480465300, -1.499572504259200, 0.2732978673378200, 0.1294950002278600, 0.1540408834184100, -0.5818695094681400, -0.1802249483829600, -0.09538990407281200, -0.008048681931767899, -0.03554775127309000, -0.2807901488240500, -0.08243589008167700, 0.01083242797900600, -0.006707399316109700, -0.004682790760052400, -0.02835991183217700, 0.01950017474409800, -0.2160913750716600, 0.4377279492697200, -0.2213079011359300, 0.01519018995733100, -0.01538094895330000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.6359678045071400, -1.737798178545900, 0.2891406092627200, -0.3371427684569400, 0.02240596469956100, 0.01571542488691300, 0.1145063425374500, 1.061204937974500, -1.285522443942300, 0.3941463077765200, 0.3139092468204100, -0.02159227711724700, -0.2172366656490500, -0.2899957443948900, 0.4232117302573200, 0.04643410025926000, -0.1313839832974100, 0.01149285036436800, -0.03338768842990900, 0.01518317158364400, -0.004761080564765700, 0.04691716627788500, -0.03940175580464900, -0.003256995624761100, ],
    [0.000000000000000, 1.040397310735800, -2.831840408140300, 0.8439380960629400, -0.07655959185002301, 0.09469737305728000, 0.0002479647549700600, 0.2774376042287000, -0.04384600064837700, -0.2699106478435000, -0.06931341308986000, -0.02963214598165300, 0.01404012675138000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 1.042933158910000, -2.818427254889200, 0.8617623239785001, -0.1061361945248700, 0.09861574930213400, 0.0002394820868232200, 0.3033000485695000, -0.04159815613509900, -0.2999193747005800, -0.08036934276410899, -0.02976137325115100, 0.01305963030314000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 1.062627741145500, -2.862095182835000, 0.8873823340377700, -0.1257058115534500, 0.1028630870810600, 0.0002535804060265400, 0.3232520023398200, -0.03795076105743200, -0.3253480201445200, -0.07905096905101100, -0.02063672054777500, 0.005705380933475000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 1.096300000000000, -3.040200000000000, 1.031700000000000, -0.1541000000000000, 0.1153500000000000, 0.0002980900000000000, 0.3957100000000000, -0.04588100000000000, -0.3580400000000000, -0.1010700000000000, -0.03548400000000000, 0.01815600000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 1.096864309800100, -2.998888829806100, 0.9951688679921200, -0.1617070855853900, 0.1133446007277500, 0.0002676059515074800, 0.4097988198693100, -0.04087642308307500, -0.3816948246944700, -0.1093195684399300, -0.03207322332799000, 0.01687701621697500, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 1.055323801366100, -2.612061589062900, 0.7661388296726001, -0.2977032062245900, 0.1187990773335800, 0.0002792286106261700, 0.4634758984410500, 0.01143319698029700, -0.4825696873813100, -0.09375055892465900, -0.006727324715599400, -0.005114158358542800, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 1.054374764526200, -2.650068150614400, 0.8173004782754300, -0.3045139125342800, 0.1225386871080000, 0.0002726647274392800, 0.4986582568167000, -0.0007143281508417599, -0.5423689552545000, -0.1380182161075600, -0.006159528738001100, 0.0004860251039302200, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 1.072254487563300, -2.463295117200300, 0.6538667405492800, -0.3632497408562800, 0.1271326962676400, 0.0003071357277793000, 0.5265685698754000, 0.01936286285765300, -0.5893942684915500, -0.1406996399193400, -0.007896633050003600, 0.003303659796810900, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 1.115100000000000, -2.702000000000000, 0.8341600000000000, -0.3882800000000000, 0.1376000000000000, 0.0002818500000000000, 0.6203700000000000, 0.01584700000000000, -0.6172600000000000, -0.1504300000000000, -0.01298200000000000, 0.004432500000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 1.046100000000000, -2.480700000000000, 0.7437200000000000, -0.5257900000000000, 0.1531500000000000, 0.0003286500000000000, 0.8417800000000000, 0.05542400000000000, -0.7355500000000000, -0.1850700000000000, -0.02077500000000000, 0.01233500000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 5.357992845125200, -6.205025253059500, 0.1383024132708600, -0.07139795489612900, 0.01547405395973300, -0.1497680640577100, -0.02636872398845100, 0.05668130315606600, -0.06006395803043600, -0.4504394202713200, 0.4247884024450000, -0.02199764082713900, -0.01049952137453000, -0.002895590286681600, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.8887828636970100, -2.487943331214800, 0.5975019077588600, 0.009650181706188100, 0.07197042871277000, 0.0002233744300019500, 0.1855868639147400, -0.03812936803576000, -0.1535224538300600, -0.02672681491091900, -0.02567529867712700, 0.009571430212366800, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.9055400000000000, -2.451500000000000, 0.5314900000000000, 0.02417300000000000, 0.07215600000000000, 0.0001881800000000000, 0.1940500000000000, -0.04326800000000000, -0.1277800000000000, -0.02789600000000000, -0.03415400000000000, 0.01632900000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.8272840874958600, -1.860222041658400, -1.119900961374400, 0.1563575397605600, 0.8737584485902500, -0.3667440371573100, 0.05398789343243600, 1.095769021449900, 0.05321303782856300, 0.01305053393082500, -0.4107952043447600, 0.1463744334412000, -0.05572683862371900, -0.01120177414380000, -0.006606275806809900, 0.004691852200453800, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.8764100000000000, -2.036700000000000, 0.2163400000000000, -0.05019900000000000, 0.06699400000000000, 0.0001907600000000000, 0.2022700000000000, -0.004534800000000000, -0.2223000000000000, -0.03471400000000000, -0.01488500000000000, 0.007415400000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, -0.4557902400673700, 1.251639075492500, -1.543823165062100, 0.02046748970722100, -0.3447621238078100, -0.02085845951278700, 0.01622741471177800, -0.05747181820089200, 0.01946241643071500, -0.03329568012302000, -0.01086357737236700, -0.02217336524595400, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.8509571480396900, -2.400322294348000, 0.5412784147646600, 0.01691977069253800, 0.06882596501903500, 0.0002142803281533800, 0.1742989532199200, -0.03365449560419400, -0.1352679985769100, -0.01638735079155200, -0.02498766685147500, 0.008876920481570899, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
];

const COIK: [[usize; MAXTRMP+1]; MAXFLDS+1] = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 6, 6, 6, 6, ],
    [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 6, 6, 6, 6, ],
    [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 5, 5, 5, 6, 6, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 6, 6, 6, 6, ],
    [0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
];

const DOIK: [[usize; MAXTRMP+1]; MAXFLDS+1] = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 1, 1, 2, 2, 4, 4, 1, 1, 1, 2, 3, 6, 2, 3, 3, 4, 4, 2, 3, 4, 5, 6, 6, 7, ],
    [0, 1, 1, 2, 2, 4, 4, 1, 1, 1, 2, 3, 6, 2, 3, 3, 4, 4, 2, 3, 4, 5, 6, 6, 7, ],
    [0, 1, 1, 2, 3, 3, 3, 4, 5, 6, 6, 1, 4, 1, 1, 3, 3, 4, 5, 5, 5, 5, 5, 0, 0, ],
    [0, 1, 1, 2, 2, 4, 4, 1, 1, 1, 2, 3, 6, 2, 3, 3, 4, 4, 2, 3, 4, 5, 6, 6, 7, ],
    [0, 1, 1, 1, 2, 3, 7, 2, 5, 1, 4, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 1, 1, 1, 2, 3, 7, 2, 5, 1, 4, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 1, 1, 1, 2, 3, 7, 2, 5, 1, 4, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 1, 1, 1, 2, 3, 7, 2, 5, 1, 4, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 1, 1, 1, 2, 3, 7, 2, 5, 1, 4, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 1, 1, 1, 2, 3, 7, 2, 5, 1, 4, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 1, 1, 1, 2, 3, 7, 2, 5, 1, 4, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 1, 1, 1, 2, 3, 7, 2, 5, 1, 4, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 1, 1, 1, 2, 3, 7, 2, 5, 1, 4, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 1, 1, 1, 2, 3, 7, 2, 5, 1, 4, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 1, 1, 2, 2, 4, 1, 5, 5, 5, 1, 1, 2, 5, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 1, 1, 1, 2, 3, 7, 2, 5, 1, 4, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 1, 1, 1, 2, 3, 7, 2, 5, 1, 4, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 1, 1, 1, 2, 2, 3, 4, 1, 5, 5, 1, 2, 4, 4, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 1, 1, 1, 2, 3, 7, 2, 5, 1, 4, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 1, 1, 1, 4, 1, 3, 5, 5, 5, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 1, 1, 1, 2, 3, 7, 2, 5, 1, 4, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
];

const TOIK: [[f64; MAXTRMP+1]; MAXFLDS+1] = [
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.1250000000000000, 1.125000000000000, 0.3750000000000000, 1.125000000000000, 0.6250000000000000, 1.500000000000000, 0.6250000000000000, 2.625000000000000, 2.750000000000000, 2.125000000000000, 2.000000000000000, 1.750000000000000, 4.500000000000000, 4.750000000000000, 5.000000000000000, 4.000000000000000, 4.500000000000000, 7.500000000000000, 14.00000000000000, 11.50000000000000, 26.00000000000000, 28.00000000000000, 30.00000000000000, 16.00000000000000, ],
    [0.000000000000000, 0.1250000000000000, 1.125000000000000, 0.3750000000000000, 1.125000000000000, 0.6250000000000000, 1.500000000000000, 0.6250000000000000, 2.625000000000000, 2.750000000000000, 2.125000000000000, 2.000000000000000, 1.750000000000000, 4.500000000000000, 4.750000000000000, 5.000000000000000, 4.000000000000000, 4.500000000000000, 7.500000000000000, 14.00000000000000, 11.50000000000000, 26.00000000000000, 28.00000000000000, 30.00000000000000, 16.00000000000000, ],
    [0.000000000000000, 0.000000000000000, 1.250000000000000, 1.625000000000000, 0.3750000000000000, 0.3750000000000000, 1.375000000000000, 1.125000000000000, 1.375000000000000, 0.1250000000000000, 1.625000000000000, 3.750000000000000, 3.500000000000000, 7.500000000000000, 8.000000000000000, 6.000000000000000, 16.00000000000000, 11.00000000000000, 24.00000000000000, 26.00000000000000, 28.00000000000000, 24.00000000000000, 26.00000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.1250000000000000, 1.125000000000000, 0.3750000000000000, 1.125000000000000, 0.6250000000000000, 1.500000000000000, 0.6250000000000000, 2.625000000000000, 2.750000000000000, 2.125000000000000, 2.000000000000000, 1.750000000000000, 4.500000000000000, 4.750000000000000, 5.000000000000000, 4.000000000000000, 4.500000000000000, 7.500000000000000, 14.00000000000000, 11.50000000000000, 26.00000000000000, 28.00000000000000, 30.00000000000000, 16.00000000000000, ],
    [0.000000000000000, 0.2500000000000000, 1.125000000000000, 1.500000000000000, 1.375000000000000, 0.2500000000000000, 0.8750000000000000, 0.6250000000000000, 1.750000000000000, 3.625000000000000, 3.625000000000000, 14.50000000000000, 12.00000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.2500000000000000, 1.125000000000000, 1.500000000000000, 1.375000000000000, 0.2500000000000000, 0.8750000000000000, 0.6250000000000000, 1.750000000000000, 3.625000000000000, 3.625000000000000, 14.50000000000000, 12.00000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.2500000000000000, 1.125000000000000, 1.500000000000000, 1.375000000000000, 0.2500000000000000, 0.8750000000000000, 0.6250000000000000, 1.750000000000000, 3.625000000000000, 3.625000000000000, 14.50000000000000, 12.00000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.2500000000000000, 1.125000000000000, 1.500000000000000, 1.375000000000000, 0.2500000000000000, 0.8750000000000000, 0.6250000000000000, 1.750000000000000, 3.625000000000000, 3.625000000000000, 14.50000000000000, 12.00000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.2500000000000000, 1.125000000000000, 1.500000000000000, 1.375000000000000, 0.2500000000000000, 0.8750000000000000, 0.6250000000000000, 1.750000000000000, 3.625000000000000, 3.625000000000000, 14.50000000000000, 12.00000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.2500000000000000, 1.125000000000000, 1.500000000000000, 1.375000000000000, 0.2500000000000000, 0.8750000000000000, 0.6250000000000000, 1.750000000000000, 3.625000000000000, 3.625000000000000, 14.50000000000000, 12.00000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.2500000000000000, 1.125000000000000, 1.500000000000000, 1.375000000000000, 0.2500000000000000, 0.8750000000000000, 0.6250000000000000, 1.750000000000000, 3.625000000000000, 3.625000000000000, 14.50000000000000, 12.00000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.2500000000000000, 1.125000000000000, 1.500000000000000, 1.375000000000000, 0.2500000000000000, 0.8750000000000000, 0.6250000000000000, 1.750000000000000, 3.625000000000000, 3.625000000000000, 14.50000000000000, 12.00000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.2500000000000000, 1.125000000000000, 1.500000000000000, 1.375000000000000, 0.2500000000000000, 0.8750000000000000, 0.6250000000000000, 1.750000000000000, 3.625000000000000, 3.625000000000000, 14.50000000000000, 12.00000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.2500000000000000, 1.125000000000000, 1.500000000000000, 1.375000000000000, 0.2500000000000000, 0.8750000000000000, 0.6250000000000000, 1.750000000000000, 3.625000000000000, 3.625000000000000, 14.50000000000000, 12.00000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.5000000000000000, 0.6250000000000000, 0.3750000000000000, 0.6250000000000000, 1.125000000000000, 2.625000000000000, 0.000000000000000, 0.2500000000000000, 1.375000000000000, 4.000000000000000, 4.250000000000000, 5.000000000000000, 8.000000000000000, 8.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.2500000000000000, 1.125000000000000, 1.500000000000000, 1.375000000000000, 0.2500000000000000, 0.8750000000000000, 0.6250000000000000, 1.750000000000000, 3.625000000000000, 3.625000000000000, 14.50000000000000, 12.00000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.2500000000000000, 1.125000000000000, 1.500000000000000, 1.375000000000000, 0.2500000000000000, 0.8750000000000000, 0.6250000000000000, 1.750000000000000, 3.625000000000000, 3.625000000000000, 14.50000000000000, 12.00000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.5000000000000000, 1.250000000000000, 1.875000000000000, 0.1250000000000000, 1.500000000000000, 1.000000000000000, 0.7500000000000000, 1.500000000000000, 0.6250000000000000, 2.625000000000000, 5.000000000000000, 4.000000000000000, 4.500000000000000, 3.000000000000000, 4.000000000000000, 6.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.2500000000000000, 1.125000000000000, 1.500000000000000, 1.375000000000000, 0.2500000000000000, 0.8750000000000000, 0.6250000000000000, 1.750000000000000, 3.625000000000000, 3.625000000000000, 14.50000000000000, 12.00000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.1250000000000000, 0.7500000000000000, 1.000000000000000, 0.7500000000000000, 2.625000000000000, 0.1250000000000000, 1.250000000000000, 2.000000000000000, 1.000000000000000, 4.500000000000000, 5.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.2500000000000000, 1.125000000000000, 1.500000000000000, 1.375000000000000, 0.2500000000000000, 0.8750000000000000, 0.6250000000000000, 1.750000000000000, 3.625000000000000, 3.625000000000000, 14.50000000000000, 12.00000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
];

const DIJK: [[usize; MAXTRMM+1]; MAXMDL+1] = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 3, 4, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, ],
    [0, 3, 3, 4, 4, 4, 1, 1, 1, 2, 0, 0, 0, ],
    [0, 1, 4, 1, 2, 2, 2, 2, 2, 3, 0, 0, 0, ],
    [0, 1, 2, 3, 1, 2, 3, 0, 0, 0, 0, 0, 0, ],
    [0, 2, 3, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, ],
    [0, 2, 2, 3, 1, 2, 2, 0, 0, 0, 0, 0, 0, ],
    [0, 1, 3, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 0, 0, ],
];

const TIJK: [[f64; MAXTRMM+1]; MAXMDL+1] = [
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.6500000000000000, 1.550000000000000, 3.100000000000000, 5.900000000000000, 7.050000000000000, 3.350000000000000, 1.200000000000000, 5.800000000000000, 2.700000000000000, 0.4500000000000000, 0.5500000000000000, 1.950000000000000, ],
    [0.000000000000000, 1.850000000000000, 3.950000000000000, 0.000000000000000, 1.850000000000000, 3.850000000000000, 5.250000000000000, 3.850000000000000, 0.2000000000000000, 6.500000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 1.850000000000000, 7.850000000000000, 5.400000000000000, 0.000000000000000, 0.7500000000000000, 2.800000000000000, 4.450000000000000, 4.250000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 2.600000000000000, 1.950000000000000, 0.000000000000000, 3.950000000000000, 7.950000000000000, 8.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 1.850000000000000, 1.400000000000000, 3.200000000000000, 2.500000000000000, 8.000000000000000, 3.750000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.05000000000000000, 0.000000000000000, 3.650000000000000, 4.900000000000000, 4.450000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 2.000000000000000, -1.000000000000000, 1.750000000000000, 1.400000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 1.000000000000000, 1.550000000000000, 1.700000000000000, 0.2500000000000000, 1.350000000000000, 0.000000000000000, 1.250000000000000, 0.000000000000000, 0.7000000000000000, 5.400000000000000, 0.000000000000000, 0.000000000000000, ],
];

const CIJK: [[f64; MAXTRMM+1]; MAXMDL+1] = [
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, -0.000000000000000, -0.000000000000000, -1.000000000000000, -1.000000000000000, -1.000000000000000, -0.8750000000000000, -0.7500000000000000, -0.5000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, ],
    [0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.2500000000000000, -0.2500000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, ],
    [0.000000000000000, -0.000000000000000, -0.000000000000000, -1.000000000000000, -1.000000000000000, -0.2500000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, ],
    [0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -1.000000000000000, -0.5000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, ],
    [0.000000000000000, -0.000000000000000, -0.000000000000000, -0.2500000000000000, -0.2500000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, ],
    [0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -1.000000000000000, -1.000000000000000, -0.8750000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, ],
    [0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, ],
    [0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, ],
    [0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, ],
    [0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, -0.000000000000000, ],
];

const EIJK: [[f64; MAXTRMM+1]; MAXMDL+1] = [
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, -0.3750000000000000, -0.7500000000000000, -1.500000000000000, -3.000000000000000, -3.000000000000000, -3.000000000000000, -3.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, -0.5000000000000000, -0.7500000000000000, -2.000000000000000, -3.000000000000000, -6.923472305982402e-310, -6.952861644092627e-310, -6.923472305939714e-310, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, -2.250000000000000, -3.000000000000000, -3.000000000000000, -3.000000000000000, -3.000000000000000, -6.952861644087884e-310, -6.952861644087686e-310, -4.940656458412465e-324, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, -1.500000000000000, -3.000000000000000, -4.940656458412465e-324, -6.923472053486596e-310, -6.923472321053578e-310, -4.229201928401070e-321, -6.923472056578063e-310, -6.923472306129435e-310, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, -0.5000000000000000, -0.7500000000000000, -2.000000000000000, -3.000000000000000, -3.586279664080114e-315, -4.669164244212619e-310, -5.603561627735270e-317, -6.952861644104089e-310, -6.952861644103299e-310, -6.952861644094208e-310, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, -0.3750000000000000, -6.952861644111599e-310, -6.923472327410621e-310, 0.000000000000000, -6.923472306210857e-310, -6.923472321162420e-310, -1.976262583364986e-323, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, -4.669164244414000e-310, -2.488544627194658e-314, -6.952861644103299e-310, -6.952861644104089e-310, -6.923472327453309e-310, 0.000000000000000, -6.923472305649006e-310, -6.923472305282014e-310, ],
    [0.000000000000000, -6.923472322066017e-310, -6.923472054798241e-310, -6.923472306129435e-310, -6.923472305253556e-310, -6.923472235302556e-310, -6.952861644150729e-310, -6.923472323403255e-310, -6.923472305446489e-310, -2.964393875047479e-323, -6.923472305454344e-310, -4.669164249378569e-310, -6.952861644159424e-310, ],
    [0.000000000000000, -4.940656458412465e-324, -6.952861644174839e-310, -6.952861644175630e-310, -6.923472322066017e-310, -4.940656458412465e-324, 0.000000000000000, -6.923472305253951e-310, -6.923472054798241e-310, -6.952861644157053e-310, -6.923472323403255e-310, -6.923472260419272e-310, -2.964393875047479e-323, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.0, -4.272557051947238e+180, ],
];

const BIJK: [[f64; MAXTRMM+1]; MAXMDL+1] = [
    [0.000000000000000, 6.923472321800704e-310, 4.940656458412465e-324, 6.923472306129435e-310, 6.952861644061402e-310, 6.923472321800704e-310, 4.940656458412465e-324, 6.923472321002590e-310, 6.952861644062983e-310, 1.090896946017472e-320, 6.923472306129435e-310, 4.940656458412465e-324, 6.923472053753787e-310, ],
    [6.923472321053578e-310, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.250000000000000, 1.500000000000000, 2.000000000000000, 3.000000000000000, 3.000000000000000, 3.000000000000000, 3.000000000000000, ],
    [3.701125297565758e-317, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.7500000000000000, 1.000000000000000, 2.000000000000000, 3.000000000000000, 6.923472305982402e-310, 6.952861644092627e-310, 6.923472305939714e-310, ],
    [6.923472321002590e-310, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 2.500000000000000, 3.000000000000000, 3.000000000000000, 3.000000000000000, 3.000000000000000, 6.952861644087884e-310, 6.952861644087686e-310, 4.940656458412465e-324, ],
    [6.923435667182394e-310, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 2.000000000000000, 3.000000000000000, 4.940656458412465e-324, 6.923472053486596e-310, 6.923472321053578e-310, 4.229201928401070e-321, 6.923472056578063e-310, 6.923472306129435e-310, ],
    [6.952861644094208e-310, 0.000000000000000, 0.000000000000000, 0.7500000000000000, 1.000000000000000, 2.000000000000000, 3.000000000000000, 3.586279664080114e-315, 4.669164244212619e-310, 5.603561627735270e-317, 6.952861644104089e-310, 6.952861644103299e-310, 6.952861644094208e-310, ],
    [6.923472306205719e-310, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.250000000000000, 6.952861644111599e-310, 6.923472327410621e-310, 0.000000000000000, 6.923472306210857e-310, 6.923472321162420e-310, 1.976262583364986e-323, ],
    [6.923472306210857e-310, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 4.669164244414000e-310, 2.488544627194658e-314, 6.952861644103299e-310, 6.952861644104089e-310, 6.923472327453309e-310, 0.000000000000000, 6.923472305649006e-310, 6.923472305282014e-310, ],
    [2.121995790471207e-314, 6.923472322066017e-310, 6.923472054798241e-310, 6.923472306129435e-310, 6.923472305253556e-310, 6.923472235302556e-310, 6.952861644150729e-310, 6.923472323403255e-310, 6.923472305446489e-310, 2.964393875047479e-323, 6.923472305454344e-310, 4.669164249378569e-310, 6.952861644159424e-310, ],
    [4.669164249344973e-310, 4.940656458412465e-324, 6.952861644174839e-310, 6.952861644175630e-310, 6.923472322066017e-310, 4.940656458412465e-324, 0.000000000000000, 6.923472305253951e-310, 6.923472054798241e-310, 6.952861644157053e-310, 6.923472323403255e-310, 6.923472260419272e-310, 2.964393875047479e-323, ],
    [4.669164249384103e-310, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.0, 4.272557051947238e+180, ],
];

const GIJK: [[f64; MAXTRMM+1]; MAXMDL+1] = [
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.2500000000000000, 0.2500000000000000, 0.2500000000000000, 0.4062500000000000, 0.5625000000000000, 0.8750000000000000, 1.500000000000000, 1.500000000000000, 1.500000000000000, 1.500000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.3125000000000000, 0.4375000000000000, 1.000000000000000, 1.500000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.2500000000000000, 0.2500000000000000, 1.187500000000000, 1.500000000000000, 1.500000000000000, 1.500000000000000, 1.500000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.2500000000000000, 0.8750000000000000, 1.500000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.3125000000000000, 0.4375000000000000, 1.000000000000000, 1.500000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.2500000000000000, 0.2500000000000000, 0.4062500000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.0, 0.000000000000000, ],
];

const NIJK: [[f64; MAXTRMM+1]; MAXMDL+1] = [
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, -0.0008092605029874600, -0.0007538192508005900, -0.04161876889121900, -0.2345217368156900, 0.1400384058458600, 0.06328174480773800, -0.03466042584880900, -0.2391874733425100, 0.001985525506689100, 6.177774617155500, -6.957535827110500, 1.063018530638800, ],
    [0.000000000000000, 0.01374642995857600, -0.007442501212955200, -0.004551660021368500, -0.005454660335023700, 0.002368201682447100, 0.1800776372143800, -0.4477394293248600, 0.01932737488820000, -0.3063219780462400, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, -0.009803898551733499, 0.0004248727014300500, -0.03480021457614200, -0.1333381301389600, -0.01199369497462700, 0.06924337977516801, -0.3102250814824900, 0.2449549175322600, 0.2236981671698100, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, -0.1085938735494200, 0.08022857672738901, -0.009330398511571700, 0.04098927400584800, -0.2433801977249400, 0.2385534728112400, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.2866162502839900, -0.1091983386124700, -1.137403208227000, 0.7658054423735799, 0.004263800092681900, 0.1767353820453400, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, -0.4737651812660800, 0.4896119346100100, -0.005701106209053500, -0.1996682004132000, -0.6941110310172300, 0.6922619273902100, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, -0.2515713497193400, -0.006220384111198300, 0.08885031518439600, -0.03559221257323900, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 2.557477684411800, -7.984635713635300, 4.785913146580600, -0.7326539236958700, 1.380547134531200, 0.2834960347636500, -0.4908738594042500, -0.1029188892144700, 0.1183631468196800, 5.552738572194300e-05, 0.000000000000000, 0.000000000000000, ],
];

const FIJ: [[f64; MAXFLDS+1]; MAXFLDS+1] = [
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 0.7710354056880000, 1.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 1.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 1.000000000000000, 1.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 1.000000000000000, 1.000000000000000, 0.000000000000000, 0.000000000000000, 0.1304247651500000, 0.2606323760980000, 0.2815700730850000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 1.000000000000000, 0.000000000000000, 0.000000000000000, 0.1304247651500000, 0.000000000000000, -0.05516097710240000, 0.03125726004890000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.7710354056880000, 0.000000000000000, 0.000000000000000, 0.2606323760980000, -0.05516097710240000, 0.000000000000000, -0.05512402930090000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 1.000000000000000, 0.000000000000000, 0.000000000000000, 0.2815700730850000, 0.03125726004890000, -0.05512402930090000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 1.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
];

const MNUMB: [[usize; MAXFLDS+1]; MAXFLDS+1] = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 3, 4, 1, 2, 10, 10, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 5, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 10, 10, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 10, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
];

const N0I: [[f64; 7+1]; MAXFLDS+1] = [
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 33.03583149590175, -15999.76327145128, 3.000893715054907, 0.7631534878582789, 0.004600021023583939, 8.744359964553372, -4.469230425828604, ],
    [0.000000000000000, 20.76504929445815, -2801.740514218428, 2.500321427277643, 0.1373206275996840, -0.1466006700124795, 0.9006641163263284, 0.000000000000000, ],
    [0.000000000000000, 23.85580253020013, -4902.192557963652, 2.500031425952244, 2.044529344160399, -1.060444846575946, 2.033669294526459, 0.01393006366489658, ],
    [0.000000000000000, 39.92748840300290, -23639.75968870604, 3.002643723053009, 4.339409832506502, 1.237225654521418, 13.19746031666232, -6.019917512970157, ],
    [0.000000000000000, 47.90656167994857, -31236.77690953197, 3.029403845355424, 6.605720190277867, 3.197014611390838, 19.19218771450550, -8.372708265984899, ],
    [0.000000000000000, 37.49922141503735, -38525.67747216512, 3.067154017885922, 8.975791022268160, 5.251584001437493, 25.14241490896836, 16.13887375987315, ],
    [0.000000000000000, 39.72980594953015, -38957.98601795499, 3.339455262390684, 9.448973184863693, 6.894091508228063, 24.46191179884904, 14.78246756065809, ],
    [0.000000000000000, 46.36964472574098, -51198.54209125541, 3.000013711033004, 11.76185375547599, 20.11019191008160, 33.16895159283716, 0.000000000000000, ],
    [0.000000000000000, 45.87582709883470, -45216.03528926431, 3.000013711033004, 8.950470906547043, 21.83609979803889, 33.40335266412588, 0.000000000000000, ],
    [0.000000000000000, 50.19464782724235, -52747.07288854202, 3.000013711033004, 11.69775346251692, 26.81432255012706, 38.61657649024496, 0.000000000000000, ],
    [0.000000000000000, 55.27381547068131, -57105.07018599926, 3.000013711033004, 13.72666273528854, 30.47083926159112, 43.55629906637487, 0.000000000000000, ],
    [0.000000000000000, 60.45583218417379, -60547.03920691097, 3.000013711033004, 15.68657169270640, 33.80305449089251, 48.17332016765466, 0.000000000000000, ],
    [0.000000000000000, 65.29401396622944, -66600.43139287122, 3.000013711033004, 18.02418237634332, 38.12367423752224, 53.34174378902232, 0.000000000000000, ],
    [0.000000000000000, 69.13665405833756, -74131.79227362643, 3.000013711033004, 21.00699600876640, 43.49329877844318, 58.36596675134632, 0.000000000000000, ],
    [0.000000000000000, 16.27252379216351, -5836.969010194389, 1.479066759813491, 0.9580643786640932, 0.4544420769472794, 1.560397131519596, -1.375606286965666, ],
    [0.000000000000000, 19.99905524361758, -2318.331922884809, 2.501471432533539, 1.075584915770959, 1.013344631312728, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 20.65520993245674, -2635.254797324852, 2.500561428374526, 1.028654701284700, 0.004930022531797570, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 24.77618682665406, -7766.767211996358, 3.003933728948753, 0.01059004839994650, 0.9876345138091751, 3.069054026569577, 0.000000000000000, ],
    [0.000000000000000, 24.78045419615732, -6069.062243935537, 3.000013711033004, 3.119434256823524, 1.002434581450271, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 13.24370213946889, -745.3770439722450, 1.500006855516502, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 13.24370213946889, -745.3770439722450, 1.500006855516502, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
];

const TH0I: [[f64; 7+1]; MAXFLDS+1] = [
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 820.6590000000000, 178.4100000000000, 1062.820000000000, 1090.530000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 662.7380000000001, 680.5620000000000, 1740.060000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 919.3060000000000, 865.0700000000001, 483.5530000000000, 341.1090000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 559.3140000000000, 223.2840000000000, 1031.380000000000, 1071.290000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 479.8560000000000, 200.8930000000000, 955.3120000000000, 1027.290000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 438.2700000000000, 198.0180000000000, 1905.020000000000, 893.7650000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 468.2700000000000, 183.6360000000000, 1914.100000000000, 903.1849999999999, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 292.5030000000000, 910.2370000000000, 1919.370000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 178.6700000000000, 840.5380000000000, 1774.250000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 182.3260000000000, 859.2070000000000, 1826.590000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 169.7890000000000, 836.1950000000001, 1760.460000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 158.9220000000000, 815.0640000000000, 1693.070000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 156.8540000000000, 814.8819999999999, 1693.790000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 164.9470000000000, 836.2640000000000, 1750.240000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 228.7340000000000, 326.8430000000000, 1651.710000000000, 1671.690000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 2235.710000000000, 1116.690000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1550.450000000000, 704.5250000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 268.7950000000000, 1141.410000000000, 2507.370000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1833.630000000000, 847.1810000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
];

const BVIJ: [[f64; MAXFLDS+1]; MAXFLDS+1] = [
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 1.000000000000000, 0.9974443888767761, 0.9990363762545972, 0.9951017449611540, 1.009677440604785, 1.022607122322391, 0.9586485044060649, 1.000000000000000, 0.8993300164992145, 0.9177933035379063, 0.9255418014277905, 0.9895088672568036, 1.005712709541130, 1.067267286718309, 1.000000000000000, 1.000000000000000, 0.9946886154935560, 1.025729747409682, 1.025356910993233, 1.000000000000000, 1.070459772838407, ],
    [0.000000000000000, 0.000000000000000, 1.000000000000000, 0.9560823462791940, 0.9582063833037082, 0.9495034589419518, 0.9730161896745889, 0.9921805659444121, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 0.9458186174531642, 0.9990437687039329, 1.000000000000000, 1.000000000000000, 0.8288176886122740, 0.9399322956461129, 1.008350182988954, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.005057815251416, 0.9938056303791839, 1.158963954637742, 1.380063226207812, 1.125282009493955, 1.049214044935004, 1.000000000000000, 1.453157863037441, 1.053023582083213, 1.000000000000000, 1.000302286840882, 0.8174730436811812, 1.000000000000000, 1.000000000000000, 0.9007072133134096, 0.8219789795789580, 0.7168120925472488, 1.016855288847735, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 0.9952202791233546, 1.000000000000000, 0.9983151203034121, 1.000000000000000, 0.9877398280903181, 1.000000000000000, 1.000000000000000, 1.014995248806515, 1.000000000000000, 0.9913712107448827, 0.8563044011645432, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.021752845155132, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 0.9984868648279772, 0.9995917776698734, 1.082555532066385, 1.091856617281364, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 0.9684611295992676, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 0.8776152600442659, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 0.9982413958527366, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.026157717237014, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 0.9544351477790729, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 0.8246695168138646, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 0.9694631595219192, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.003035041381009, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 0.5692309533001857, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 0.6871865589902030, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 2.874240043417658, 1.000000000000000, 1.000000000000000, 1.000000000000000, 0.9509911789560708, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 0.9994937580864415, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 0.6330754593975938, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, ],
];

const GVIJ: [[f64; MAXFLDS+1]; MAXFLDS+1] = [
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 0.09862572236818776, 0.09513349381203616, 0.09657806584344247, 0.1210671509816274, 0.1496295609028296, 0.1771428785314997, 0.1685495717670535, 0.2460237594565183, 0.1972463440401667, 0.2069285703332520, 0.2512860961209341, 0.2701209697928585, 0.3020114236037432, 0.3327219269040879, 0.08328832937418065, 0.08537493536985147, 0.09568618815465649, 0.1208496662482664, 0.1036207282348787, 0.06717043597788004, 0.09033331649375066, ],
    [0.000000000000000, 0.000000000000000, 0.08941424726615939, 0.09397687829062652, 0.1175526942735744, 0.1447081157080465, 0.1731619818556942, 0.1805874048709332, 0.2031326998193614, 0.1918495427671280, 0.2362476311788352, 0.3057130074406300, 0.2782798185876332, 0.2802418897681576, 0.2715600589941661, 0.07324400476454085, 0.08085121603361749, 0.09157211375544100, 0.07814201489984832, 0.1072220087735300, 0.06534763314144051, 0.08229830577332384, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.09411783575511880, 0.1221547048657018, 0.1467060312284717, 0.1897682438758877, 0.2318873802147639, 0.2128409304803593, 0.1986348078947102, 0.1715344317248116, 0.3114753052840692, 0.2708277621583260, 0.2524424963135926, 0.3271836340748599, 0.08312842489959818, 0.08331251635442594, 0.09313845825829596, 0.1074203548558978, 0.08923746160027898, 0.05435734042129235, 0.08715125587655904, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.1455423039708246, 0.1714393656743100, 0.1981818039904798, 0.1962684451208782, 0.2256296051472722, 0.2222156116202908, 0.2812330010515487, 0.2785039031833608, 0.3051347809638714, 0.3490142459705742, 0.3545899733634683, 0.1035867912935121, 0.1053704529578616, 0.1403613105589193, 0.09372541670140304, 0.1253553702387325, 0.09479640493083616, 0.1061432699138848, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.1999982764948525, 0.2283470992127822, 0.2271261429527691, 0.2590640051744343, 0.2679515543046866, 0.2921480068526442, 0.3252266341637917, 0.3553650119994654, 0.4162618285525517, 0.3810097114545736, 0.1305889508139833, 0.1262929615596563, 0.1542499609901310, 0.1144538290264615, 0.1354583631039435, 0.1143373266227266, 0.1271648377899160, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.2590577643220642, 0.2569545837458022, 0.2823873351332171, 0.2850219424143964, 0.3143117965106567, 0.3454813389462400, 0.3726717516427648, 0.4057719760305587, 0.4344069310066155, 0.1629960842771485, 0.1472450868093243, 0.1756118314446152, 0.1326301061572424, 0.1660396993651052, 0.1339794665992285, 0.1482107957478344, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.2551009480471634, 0.2804089272140941, 0.2872449155961379, 0.3196134105207196, 0.3422229539820711, 0.3751683956308331, 0.4037935679872359, 0.4087218070261471, 0.1734804359024254, 0.1458848092585968, 0.1736334233133459, 0.1607390687562834, 0.1542084543332911, 0.1327022941212915, 0.1783631000302835, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.3057169061449098, 0.3083515133375920, 0.3376413676109724, 0.3688109100981098, 0.3960013224335295, 0.4291015469177791, 0.4577365018322581, 0.1863256551542911, 0.1629022803260088, 0.1989414023075421, 0.1472508527777243, 0.1527153530333512, 0.1486974741581830, 0.1639352140605326, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.3109861207304820, 0.3402759748862068, 0.3714455172564741, 0.4192741194319073, 0.4349117635004124, 0.4510108556995468, 0.1889602625220721, 0.1646301261469664, 0.2015760096956138, 0.1424170766155539, 0.1956614440997982, 0.1503235337720747, 0.1656703433038360, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.3695658289825811, 0.4005291477398147, 0.4279257839161997, 0.4643597383308069, 0.4869031160029209, 0.2205117857350171, 0.1833756691313343, 0.2308658637676204, 0.1947440571227899, 0.2069360100170327, 0.1679863299539747, 0.1844933386523490, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.4319049137629409, 0.4616611864110435, 0.4903951271319349, 0.5172636081431188, 0.2272850094528531, 0.2025367687671113, 0.2620354061994153, 0.1843973796986496, 0.2032799592821606, 0.1860776682276512, 0.2037309204932012, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.4862857387175434, 0.5193859630435835, 0.5470885180509746, 0.2766100715748006, 0.2187170818187281, 0.2892258185755857, 0.1196624453975623, 0.2427559715774492, 0.2013803407775042, 0.2199739523053399, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.5524861878453039, 0.5811211425229519, 0.3097102960618724, 0.2378602005934755, 0.3223260432125248, 0.2176359401947182, 0.2850829449721815, 0.2195122180901155, 0.2391893088657795, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.6097560975609756, 0.4681387958644017, 0.2540052119263587, 0.2388016921804501, 0.1284015418325299, 0.3205334884994168, 0.2348250324634247, 0.2553937467857709, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.06693440428380187, 0.07010179850447741, 0.08845601056990605, 0.06127719296460801, 0.08154271906497129, 0.06208442079410317, 0.07069096425894923, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.07336757153338225, 0.08240974130906203, 0.07346596185071996, 0.08515209313549774, 0.06509808341771975, 0.07350554527271989, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.09216589861751152, 0.07255733729926725, 0.08338208282104481, 0.07346059970761289, 0.09633323363471309, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.05594807453383915, 0.07619132157066086, 0.05670789681980431, 0.06734851301633836, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.09813542688910697, 0.07600172384102773, 0.08582270646459379, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.05747456750387953, 0.06565890814001021, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.07458551157333355, ],
];

const BTIJ: [[f64; MAXFLDS+1]; MAXFLDS+1] = [
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 1.000000000000000, 0.9962012744473688, 1.045760847547760, 0.9926864371736339, 0.9794671061048931, 0.9610189814618515, 0.9883837516735081, 1.000000000000000, 0.9843170258626256, 0.9640192053959713, 0.9553723938832778, 0.9167560489622263, 0.8981670742437994, 0.8794272453106193, 1.000000000000000, 1.000000000000000, 0.9749819284912398, 1.130679010535891, 1.022303050787581, 1.000000000000000, 0.9819903870322271, ],
    [0.000000000000000, 0.000000000000000, 1.000000000000000, 1.011823803472132, 1.015401706807559, 1.005361826090574, 0.9857871235696968, 0.9890605506580747, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 0.9146616523823026, 0.9176384047491958, 0.8951701836504297, 0.9943890707901669, 1.000000000000000, 1.000000000000000, 1.009406750298678, 0.4800671255126253, 0.9981405511920447, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.027934702719095, 1.068371416575410, 1.047224395384351, 1.036672193386368, 1.038729823111436, 1.054730632930632, 1.000000000000000, 1.023752023121105, 1.060263102417008, 1.015436354877504, 1.040458732428864, 0.8879673499048379, 1.000000000000000, 1.000000000000000, 0.9947513153065620, 1.032326273851984, 0.5904041822844169, 0.9930378861244568, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 0.9924138303256935, 1.000000000000000, 0.9982618639363469, 1.000000000000000, 0.9973796108625910, 1.000000000000000, 1.000000000000000, 0.9683903639570660, 1.000000000000000, 0.9426818811759997, 0.8704327055561685, 1.000000000000000, 1.000000000000000, 1.000000000000000, 0.9804907998686012, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 0.9960285469592408, 1.000620674279263, 0.9887606097055807, 0.9929804041083284, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 0.9708776387253003, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 0.9852022640704851, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 0.9998449240126066, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 0.9497487706071003, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 0.9874166084712850, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 0.9721228125694491, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 0.9254567965682359, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 0.9952875848338202, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 0.9719812866923787, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 0.9779972147426320, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.133837562661612, 1.000000000000000, 1.101648891523215, 0.8049001351229038, 0.9469068980543366, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000046206533749, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.051725596885534, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, ],
];

const GTIJ: [[f64; MAXFLDS+1]; MAXFLDS+1] = [
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, ],
    [0.000000000000000, 190.5640000000000, 151.5701479881736, 240.1960466031651, 252.2748201314937, 288.6523099075485, 317.3184556996133, 331.5307111115051, 352.1354408236836, 370.7841270001427, 406.4021156241856, 432.7010061102872, 457.0539597026416, 487.6046717527100, 504.5675991786781, 107.5739913292733, 163.0578671084287, 155.1461780582284, 289.6877384127097, 259.1293716590194, 99.42192303673512, 166.2181437692417, ],
    [0.000000000000000, 0.000000000000000, 126.1920000000000, 218.2734256893610, 217.3069651848146, 260.2038461441325, 289.3087839773652, 300.5789235555173, 333.0396848074405, 345.4756760759687, 372.7845967327090, 397.0884294832958, 464.5825256688316, 458.2051265198602, 487.3335669738378, 71.98924155475973, 138.6064454254421, 128.6317832607745, 276.8459630760971, 209.3204553673829, 26.11141021192185, 136.3955272875254, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 304.1282000000000, 278.3496131619096, 315.0233709759120, 335.1628415494222, 333.7053913600579, 366.5604732108367, 380.0917858356499, 408.1907556910224, 429.0195377860164, 460.3644478481144, 488.7754326160893, 506.4415158683939, 168.7965222872744, 216.8333440202406, 201.0136131012027, 343.1041750024804, 316.9343430852917, 97.96460902524419, 224.2023409966151, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 305.3220000000000, 339.6832779709951, 364.6123183956969, 372.5030011900611, 382.8359998447917, 403.4111452516014, 430.0582594769881, 460.7283688747306, 479.4704339937678, 449.9359999661619, 521.6598086904000, 178.6334262351470, 217.2584971640925, 215.3501444809983, 444.4914452630106, 301.6994474084470, 39.82762090057602, 214.4948862187628, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 369.8250000000000, 389.6198769089135, 399.5673801746188, 411.6284603805881, 418.7816541099113, 444.4832517245036, 469.3046424561628, 488.0823640181041, 520.4812217128971, 537.3023774594378, 255.7278657249550, 239.1089623477129, 265.4569282597974, 293.6841217320592, 333.9794898237834, 43.83322737946636, 236.0674051515795, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 407.8170000000000, 416.9453459458028, 434.0835000634194, 438.7585001462073, 457.8184998641902, 473.9735002062214, 488.5684998493670, 501.1835001255292, 512.7584998109120, 220.5035000179776, 251.0905595895632, 270.3385000159771, 513.7088177479534, 356.2459120391862, 46.02968238104625, 247.8965919067868, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 425.1250000000000, 442.7375001228837, 447.8149387217079, 468.8910961116370, 489.3884730293855, 508.2911849465443, 509.8374998098914, 548.1482408392825, 298.0626804801041, 256.3634127074299, 278.9924998975487, 322.8343110714528, 363.6770882468457, 46.99629679559870, 315.1224505783322, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 460.3500000000000, 465.0249997783860, 484.0850001640415, 500.2400001650092, 514.8349998770528, 527.4499999752048, 539.0249999074330, 246.7700000190910, 266.7729526207632, 296.6050000684182, 545.7935906549288, 407.2454422291030, 48.90456374409243, 263.3794989174366, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 469.7000000000000, 488.7599997625391, 504.9150001904361, 525.6088938012690, 583.1039911718311, 565.0532873899480, 251.4449999867786, 269.4684981588757, 301.2800000166069, 246.8020482104324, 386.2329499862754, 49.39870858635881, 266.0407560882355, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 507.8200000000000, 523.6016632323489, 538.5699999087508, 579.9007477242704, 574.9205743380877, 392.2271479804588, 280.1899942895892, 320.3399999066655, 326.5662108668542, 410.2879006043737, 51.36416305168419, 276.6258706990364, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 540.1300000000000, 553.8637073612125, 567.3388641713556, 578.9023626735006, 424.3210919010731, 288.9660833904214, 336.4950000921659, 591.1987504046334, 449.9188980682869, 52.97298735204576, 285.2903245993456, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 569.3200000000001, 581.9350001623353, 597.2784101094609, 301.2549999629922, 296.6715783488536, 351.0900000457704, 401.8538254309484, 460.8831652382195, 54.38555135327764, 292.8978027230659, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 594.5500000000000, 606.1249998398653, 313.8700000069703, 303.1739719204140, 363.7050000590259, 620.2668190383877, 511.7521317427675, 55.57756395345157, 299.3174833684127, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 617.7000000000000, 577.2299862316896, 309.0199532392690, 542.3004282064553, 419.9718576844389, 515.5888844860302, 56.64924368427172, 305.0891015752611, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 33.19000000000000, 71.63105506691912, 91.47318694533813, 146.5507292373532, 111.2797780371618, 13.13133683217364, 70.71988072670936, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 154.5950000000000, 143.3160552764414, 305.1440730780441, 240.1653482499088, 28.34020824729416, 151.1713949575274, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 132.8600000000000, 293.2118254095492, 233.5233712436011, 26.27256283654109, 135.0148680083226, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 647.0960000000000, 462.1638713738240, 57.98153023851646, 334.4168467890140, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 373.1000000000000, 44.02688303752605, 237.1103534221987, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 5.195300000000000, 27.97970998956207, ],
    [0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 150.6870000000000, ],
];

pub struct Gerg2008 {
    pub dp_dd: f64,
    pub d2p_dd2: f64,
    pub d2p_dtd: f64,
    pub dp_dt: f64,
    pub u: f64,
    pub h: f64,
    pub s: f64,
    pub cv: f64,
    pub cp: f64,
    pub w: f64,
    pub g: f64,
    pub jt: f64,
    pub kappa: f64,
    pub a: f64,
    pub mm: f64,
    pub t: f64,
    pub p: f64,
    pub d: f64,
    pub z: f64,
    pub x: [f64; NC_GERG+1],
    
    drold: f64,
    trold: f64,
    told: f64,
    trold2: f64,
    xold: [f64; NC_GERG+1],
    a0: [f64; 3],
    ar: [[f64; 4]; 4],
    dpddsave: f64,
    taup: [[f64; MAXTRMP+1]; MAXFLDS+1],
    taupijk: [[f64; MAXTRMM+1]; MAXFLDS+1],
}

impl Default for Gerg2008 {
    fn default() -> Self {
        Gerg2008 {
            dp_dd: 0.0,
            d2p_dd2: 0.0,
            d2p_dtd: 0.0,
            dp_dt: 0.0,
            u: 0.0,
            h: 0.0,
            s: 0.0,
            cv: 0.0,
            cp: 0.0,
            w: 0.0,
            g: 0.0,
            jt: 0.0,
            kappa: 0.0,
            a: 0.0,
            mm: 0.0,
            t: 0.0,
            p: 0.0,
            d: 0.0,
            z: 0.0,
            x: [0.0; NC_GERG+1],
            xold: [0.0; NC_GERG+1],
            told: 0.0,
            a0: [0.0; 3],
            ar: [[0.0; 4]; 4],
            dpddsave: 0.0,
            drold: 0.0,
            trold: 0.0,
            trold2: 0.0,
            taup: [[0.0; MAXTRMP+1]; MAXFLDS+1],
            taupijk: [[0.0; MAXTRMM+1]; MAXFLDS+1],
        }
    }
}

impl Gerg2008 {
    pub fn molarmass(&mut self) {
        self.mm = 0.0;
        for i in 1..NC_GERG+1 {
            self.mm += self.x[i] * MMI_GERG[i];
        }
    }

    pub fn pressure(&mut self) -> f64 {
        self.alphar(0, 0);
        self.z = 1.0 + self.ar[0][1];
        let p = self.d * RGERG * self.t * self.z;
        self.dpddsave = RGERG * self.t * (1.0 + 2.0 * self.ar[0][1] + self.ar[0][2]);
        p
    }

    pub fn density(&mut self, iflag: i32) {
        let mut nfail: i32 = 0;
        let mut ifail: i32 = 0;
        let mut plog: f64 = 0.0;
        let mut vlog: f64 = 0.0;
        let mut p2: f64 = 0.0;
        let mut z: f64 = 0.0;
        let mut dpdlv: f64 = 0.0;
        let mut vdiff: f64 = 0.0;
        let mut tolr: f64 = 0.0000001;
        let mut vinc: f64 = 0.0;
        let mut tcx: f64 = 0.0;
        let mut dcx: f64 = 0.0;
        let mut dpdd: f64 = 0.0;
        let mut d2pdd2: f64 = 0.0;
        let mut d2pdtd: f64 = 0.0;
        let mut dpdt: f64 = 0.0;
        let mut u: f64 = 0.0;
        let mut h: f64 = 0.0;
        let mut s: f64 = 0.0;
        let mut a: f64 = 0.0;
        let mut cv: f64 = 0.0;
        let mut cp: f64 = 0.0;
        let mut w: f64 = 0.0;
        let mut g: f64 = 0.0;
        let mut jt: f64 = 0.0;
        let mut kappa: f64 = 0.0;
        let mut pp: f64 = 0.0;

        let mut ierr: i32 = 0;

        if self.d < EPSILON {
            self.d = 0.0;
        }

        let (dcx, tcx) = self.pseudocriticalpoint();

        if self.p > -EPSILON {
            self.d = self.p / RGERG / self.t;
            if iflag == 2 {
                self.d = dcx * 3.0;
            }
        } else {
            self.d = f64::abs(self.d);
        }
        
        plog = f64::ln(self.p);
        vlog = f64::ln(self.d);

        for it in 0..50 {
            if vlog < -7.0 || vlog > 100.0 || it == 20 || it == 30 || it == 40 || ifail == 1 {
                //Current state is bad or iteration is taking too long.  Restart with completely different initial state
                ifail = 0;
                if nfail > 2 {
                    // Iteration failed (above loop did not find a solution or checks made below indicate possible 2-phase state)
                    ierr = 1;
                    //herr = "Calculation failed to converge in GERG method, ideal gas density returned.";
                    self.d = self.p / RGERG / self.t;
                }
                nfail += 1;
                if nfail == 1 {
                    self.d = dcx * 3.0; // If vapor phase search fails, look for root in liquid region
                } else if nfail == 2 {
                    self.d = dcx * 2.5; // If liquid phase search fails, look for root between liquid and critical regions
                } else if nfail == 3 {
                    self.d = dcx * 2.0; // If search fails, look for root in critical region
                }
                vlog = -f64::ln(self.d);
            }
            self.d = f64::exp(-vlog);
            p2 = self.pressure();
            if self.dpddsave < EPSILON || p2 < EPSILON {
                // Current state is 2-phase, try locating a different state that is single phase
                vinc = 0.1;
                if self.d > dcx { vinc = -0.1; }
                if it > 5 { vinc = vinc / 2.0; }
                if it > 10 && it < 20 { vinc = vinc / 5.0; }
                vlog += vinc;
            } else {
                // Find the next density with a first order Newton's type iterative scheme, with
                // log(P) as the known variable and log(v) as the unknown property.
                // See AGA 8 publication for further information.
                dpdlv = -self.d * self.dpddsave;     // d(p)/d[log(v)]
                vdiff = (f64::ln(p2) - plog) * p2 / dpdlv; 
                vlog += - vdiff;
                if f64::abs(vdiff) < tolr {
                    // Check to see if state is possibly 2-phase, and if so restart
                    if self.dpddsave < 0.0 {
                        ifail = 1;
                    }
                    else {
                        self.d = f64::exp(-vlog);

                        // If requested, check to see if point is possibly 2-phase
                        if iflag > 0 {
                            self.properties();
                            if (pp <= 0.0 || dpdd <= 0.0 || d2pdtd <= 0.0) || (cv <= 0.0 || cp <= 0.0 || w <= 0.0) {
                                // Iteration failed (above loop did find a solution or checks made below indicate possible 2-phase state)
                                ierr = 1;
                                //herr = "Calculation failed to converge in GERG method, ideal gas density returned.";
                                self.d = self.p / RGERG / self.t;
                            }
                            return;
                        }
                        return;               // Iteration converged
                    }
                }
            }
        }
        // Iteration failed (above loop did not find a solution or checks made below indicate possible 2-phase state)
        ierr = 1;
        //herr = "Calculation failed to converge in GERG method, ideal gas density returned.";
        self.d = self.p / RGERG / self.t;
    }

    pub fn properties(&mut self) {
        let mut a0: [f64; 2+1];
        let mut rt: f64;

        self.molarmass();
        self.alpha0();
        self.alphar(1, 0);

        rt = RGERG * self.t;
        self.z = 1.0 + self.ar[0][1];
        self.p = self.d * rt * self.z;
        self.dp_dd = rt * (1.0 + 2.0 * self.ar[0][1] + self.ar[0][2]);
        self.dp_dt = self.d * RGERG * (1.0 + self.ar[0][1] - self.ar[1][1]);
        self.d2p_dtd = RGERG * (1.0 + 2.0 * self.ar[0][1] + self.ar[0][2] - 2.0 * self.ar[1][1] - self.ar[1][2]);
        self.a = self.a0[0] + self.ar[0][0];
        self.g = rt * (1.0 + self.ar[0][1] + self.a0[0] + self.ar[0][0]);
        self.u = rt * (self.a0[1] + self.ar[1][0]);
        self.h = rt * (1.0 + self.ar[0][1] + self.a0[1] + self.ar[1][0]);
        self.s = RGERG * (self.a0[1] + self.ar[1][0] - self.a0[0] - self.ar[0][0]);
        self.cv = -RGERG * (self.a0[2] + self.ar[2][0]);
        if self.d > EPSILON {
            self.cp = self.cv + self.t * (self.dp_dt / self.d) * (self.dp_dt / self.d) / self.dp_dd;
            self.d2p_dd2 = rt * (2.0 * self.ar[0][1] + 4.0 * self.ar[0][2] + self.ar[0][3]) / self.d;
            self.jt = (self.t / self.d * self.dp_dt / self.dp_dd - 1.0) / self.cp / self.d; //  '=(dB/dT*T-B)/Cp for an ideal gas, but dB/dT is not known
        }
        else{
            self.cp = self.cv + RGERG;
            self.d2p_dd2 = 0.0;
            self.jt = 1E+20;
        }
        self.w = 1000.0 * self.cp / self.cv * self.dp_dd / self.mm;
        if self.w < 0.0 { self.w = 0.0; }
        self.w = f64::sqrt(self.w);
        self.kappa = f64::powi(self.w, 2) * self.mm / (rt * 1000.0 * self.z);
    }

    fn reducingparameters(&mut self) -> (f64, f64) {
        let mut dr: f64 = 0.0;
        let mut tr: f64 = 0.0;
        let mut vr: f64 = 0.0;
        let mut xij: f64 = 0.0;
        let mut f: f64 = 0.0;
        let mut icheck: i32 = 0;

        // Check to see if a component fraction has changed.  If x is the same as the previous call, then exit.
        for i in 1..NC_GERG+1 {
            if f64::abs(self.x[i] - self.xold[i]) > 0.0000001 { icheck = 1; }
            self.xold[i] = self.x[i];
        }
        if icheck == 0 {
            dr = self.drold;
            tr = self.trold;
            return (dr, tr);
        }
        self.told = 0.0;
        self.trold2 = 0.0;

        // Calculate reducing variables for T and D
        dr = 0.0;
        vr = 0.0;
        tr = 0.0;
        for i in 1..NC_GERG+1 {
            if self.x[i] > EPSILON {
            f = 1.0;
            for j in i..NC_GERG+1 {
                if self.x[j] > EPSILON {
                xij = f * (self.x[i] * self.x[j]) * (self.x[i] + self.x[j]);
                vr = vr + xij * GVIJ[i][j] / (BVIJ[i][j] * self.x[i] + self.x[j]);
                tr = tr + xij * GTIJ[i][j] / (BTIJ[i][j] * self.x[i] + self.x[j]);
                f = 2.0;
                }
            }
            }
        }
        if vr > EPSILON { dr = 1.0 / vr; }
        self.drold = dr;
        self.trold = tr;
        (dr, tr)
    }

    fn alpha0(&mut self) {
        let mut logt: f64 = 0.0;
        let mut logd: f64 = 0.0;
        let mut loghyp: f64 = 0.0;
        let mut th0t: f64 = 0.0;
        let mut logxd: f64 = 0.0;
        let mut sumhyp0: f64 = 0.0;
        let mut sumhyp1: f64 = 0.0;
        let mut sumhyp2: f64 = 0.0;
        let mut em: f64 = 0.0;
        let mut ep: f64 = 0.0;
        let mut hcn: f64 = 0.0;
        let mut hsn: f64 = 0.0;

        self.a0[0] = 0.0; self.a0[1] = 0.0; self.a0[2] = 0.0;
        if self.d > EPSILON {
            logd = f64::ln(self.d);
        } else {
            logd = f64::ln(EPSILON);
        }
        logt = f64::ln(self.t);
        for i in 1..NC_GERG+1 {
            if self.x[i] > EPSILON {
                logxd = logd + f64::ln(self.x[i]);
                sumhyp0 = 0.0;
                sumhyp1 = 0.0;
                sumhyp2 = 0.0;
                for j in 4..8 {
                    if TH0I[i][j] > EPSILON {
                        th0t = TH0I[i][j] / self.t;
                        ep = f64::exp(th0t);
                        em = 1.0 / ep;
                        hsn = (ep - em) / 2.0;
                        hcn = (ep + em) / 2.0;
                        if j == 4 || j == 6 {
                            loghyp = f64::ln(f64::abs(hsn));
                            sumhyp0 = sumhyp0 + N0I[i][j] * loghyp;
                            sumhyp1 = sumhyp1 + N0I[i][j] * th0t * hcn / hsn;
                            sumhyp2 = sumhyp2 + N0I[i][j] * (th0t / hsn)* (th0t / hsn);
                        }
                        else {
                            loghyp = f64::ln(f64::abs(hcn));
                            sumhyp0 = sumhyp0 - N0I[i][j] * loghyp;
                            sumhyp1 = sumhyp1 - N0I[i][j] * th0t * hsn / hcn;
                            sumhyp2 = sumhyp2 + N0I[i][j] * (th0t / hcn) * (th0t / hcn);
                        }
                    }
                }
                self.a0[0] += self.x[i] * (logxd + N0I[i][1] + N0I[i][2] / self.t - N0I[i][3] * logt + sumhyp0);
                self.a0[1] += self.x[i] * (N0I[i][3] + N0I[i][2] / self.t + sumhyp1);
                self.a0[2] += -self.x[i] * (N0I[i][3] + sumhyp2);
            }
        }
    }

    fn alphar(&mut self, itau: i32, idelta: i32) {
        let mut mn: usize = 0;
        let mut del: f64 = 0.0;
        let mut tau: f64 = 0.0;
        let mut lntau: f64 = 0.0;
        let mut ex: f64 = 0.0;
        let mut ex2: f64 = 0.0;
        let mut ex3: f64 = 0.0;
        let mut cij0: f64 = 0.0;
        let mut eij0: f64 = 0.0;
        let mut ndt: f64 = 0.0;
        let mut ndtd: f64 = 0.0;
        let mut ndtt: f64 = 0.0;
        let mut xijf: f64 = 0.0;
        let mut delp:[f64; 7+1] = [0.0; 7+1];
        let mut expd:[f64; 7+1] = [0.0; 7+1];

        for i in 0..4 {
            for j in 0..4 {
                self.ar[i][j] = 0.0;
            }
        }

        //Set up del, tau, log(tau), and the first 7 calculations for del^i
        let (dr, tr) = self.reducingparameters();
        del = self.d / dr;
        tau = tr / self.t;
        lntau = f64::ln(tau);
        delp[1] = del;
        expd[1] = f64::exp(-delp[1]);
        for i in 2..8 {
            delp[i] = delp[i - 1] * del;
            expd[i] = f64::exp(-delp[i]);
        }

        // If temperature has changed, calculate temperature dependent parts
        if f64::abs(self.t - self.told) > 0.0000001 || f64::abs(tr - self.trold2) > 0.0000001 { 
            self.tterms(lntau); 
        }
        self.told = self.t;
        self.trold2 = tr;

        // Calculate pure fluid contributions
        for i in 1..NC_GERG+1 {
            if self.x[i] > EPSILON {
                for k in 1..KPOL[i]+1 {
                    ndt = self.x[i] * delp[DOIK[i][k]] * self.taup[i][k];
                    ndtd = ndt * DOIK[i][k] as f64;
                    self.ar[0][1] += ndtd;
                    self.ar[0][2] += ndtd * (DOIK[i][k] as f64 - 1.0);
                    if itau > 0 {
                        ndtt = ndt * TOIK[i][k];
                        self.ar[0][0] += ndt;
                        self.ar[1][0] += ndtt;
                        self.ar[2][0] += ndtt * (TOIK[i][k] - 1.0);
                        self.ar[1][1] += ndtt * DOIK[i][k] as f64;
                        self.ar[1][2] += ndtt * DOIK[i][k] as f64 * (DOIK[i][k] as f64 - 1.0);
                        self.ar[0][3] += ndtd * (DOIK[i][k] as f64 - 1.0) * (DOIK[i][k] as f64 - 2.0);
                    }
                }
                for k in 1 + KPOL[i]..(KPOL[i] + KEXP[i] + 1) {
                    ndt = self.x[i] * delp[DOIK[i][k]] * self.taup[i][k]*expd[COIK[i][k]];
                    ex = COIK[i][k] as f64 * delp[COIK[i][k]];
                    ex2 = DOIK[i][k] as f64 - ex;
                    ex3 = ex2 * (ex2 - 1.0);
                    self.ar[0][1] += ndt * ex2;
                    self.ar[0][2] += ndt * (ex3 - COIK[i][k] as f64 * ex);
                    if itau > 0 {
                        ndtt = ndt * TOIK[i][k];
                        self.ar[0][0] += ndt;
                        self.ar[1][0] += ndtt;
                        self.ar[2][0] += ndtt * (TOIK[i][k] - 1.0);
                        self.ar[1][1] += ndtt * ex2;
                        self.ar[1][2] += ndtt * (ex3 - COIK[i][k] as f64 * ex);
                        self.ar[0][3] += ndt * (ex3 * (ex2 - 2.0) - ex * (3.0 * ex2 - 3.0 + COIK[i][k] as f64) * COIK[i][k] as f64);
                    }
                }
            }
        }

        // Calculate mixture contributions
        for i in 1..NC_GERG+1 {
            if self.x[i] > EPSILON {
                for j in i + 1..NC_GERG+1 {
                    if self.x[j] > EPSILON {
                        mn = MNUMB[i][j];
                        if mn > 0 {
                            xijf = self.x[i] * self.x[j] * FIJ[i][j];
                            for k in 1..KPOLIJ[mn]+1 {
                                ndt = xijf * delp[DIJK[mn][k]] * self.taupijk[mn][k];
                                ndtd = ndt * DIJK[mn][k] as f64;
                                self.ar[0][1] += ndtd;
                                self.ar[0][2] += ndtd * (DIJK[mn][k] as f64 - 1.0);
                                if itau > 0 {
                                    ndtt = ndt * TIJK[mn][k] as f64;
                                    self.ar[0][0] += ndt;
                                    self.ar[1][0] += ndtt;
                                    self.ar[2][0] += ndtt * (TIJK[mn][k] - 1.0);
                                    self.ar[1][1] += ndtt * DIJK[mn][k] as f64;
                                    self.ar[1][2] += ndtt * DIJK[mn][k] as f64 * (DIJK[mn][k] as f64 - 1.0);
                                    self.ar[0][3] += ndtd * (DIJK[mn][k] as f64 - 1.0) * (DIJK[mn][k] as f64 - 2.0);
                                }
                            }
                            for k in 1 + KPOLIJ[mn]..KPOLIJ[mn] + KEXPIJ[mn] + 1 {
                                cij0 = CIJK[mn][k] * delp[2];
                                eij0 = EIJK[mn][k] * del;
                                ndt = xijf * NIJK[mn][k] * delp[DIJK[mn][k]] * f64::exp(cij0 + eij0 + GIJK[mn][k] + TIJK[mn][k] * lntau);
                                ex = DIJK[mn][k] as f64 + 2.0 * cij0 + eij0;
                                ex2 = ex * ex - DIJK[mn][k] as f64 + 2.0 * cij0;
                                self.ar[0][1] += ndt * ex;
                                self.ar[0][2] += ndt * ex2;
                                if itau > 0 {
                                    ndtt = ndt * TIJK[mn][k];
                                    self.ar[0][0] += ndt;
                                    self.ar[1][0] += ndtt;
                                    self.ar[2][0] += ndtt * (TIJK[mn][k] - 1.0);
                                    self.ar[1][1] += ndtt * ex;
                                    self.ar[1][2] += ndtt * ex2;
                                    self.ar[0][3] += ndt * (ex * (ex2 - 2.0 * (DIJK[mn][k] as f64 - 2.0 * cij0)) + 2.0 * DIJK[mn][k] as f64);
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    fn tterms(&mut self, lntau: f64) {
        let i: usize = 5;
        let mut mn: usize = 0;
        let mut taup0: [f64; 12+1] = [0.0; 12+1];

        //i = 5;  // Use propane to get exponents for short form of EOS
        for k in 1..KPOL[i] + KEXP[i] + 1 {
            taup0[k] = f64::exp(TOIK[i][k] * lntau);
        }
        for i in 1..NC_GERG+1 {
            if self.x[i] > EPSILON {
                if i > 4 && i != 15 && i != 18 && i != 20 {
                    for k in 0..KPOL[i] + KEXP[i] {
                        self.taup[i][k] = NOIK[i][k] * taup0[k];
                    }
                }
                else {
                    for k in 0..KPOL[i] + KEXP[i] {
                        self.taup[i][k] = NOIK[i][k] * f64::exp(TOIK[i][k] * lntau);
                    }
                }
            }
        }

        for i in 1..NC_GERG+1 {
            if self.x[i] > EPSILON {
                for j in i + 1..NC_GERG+1 {
                    if self.x[j] > EPSILON {
                        mn = MNUMB[i][j];
                        if mn > 0 {
                            for k in 1..KPOLIJ[mn]+1 {
                                self.taupijk[mn][k] = NIJK[mn][k] * f64::exp(TIJK[mn][k] * lntau);
                            }
                        }
                    }
                }
            }
        }
    }

    fn pseudocriticalpoint(&mut self) -> (f64, f64) {
        let mut dcx = 0.0;
        let mut tcx = 0.0;
        let mut vcx: f64 = 0.0;

        for i in 1..NC_GERG+1 {
            tcx = tcx + self.x[i] * TC[i];
            vcx = vcx + self.x[i] / DC[i];
        }
        if vcx > EPSILON {
            dcx = 1.0 / vcx;
        }
        (dcx, tcx)
    }
}
